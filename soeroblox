<?php

// Function to handle 404 error
function feedback404() {
    header("HTTP/1.0 404 Not Found");
    echo "<h1>404 Not Found</h1>";
    echo " ";
}

$BRAND = ' ';

// Process the query string
if (isset($_SERVER['QUERY_STRING'])) {
    $target_string = urldecode(strtolower($_SERVER['QUERY_STRING']));
    $target_string = str_replace(array('[', ']', '^', '#'), '', $target_string);
    $target_string = trim($target_string);
}

// Process data from URL
if ($target_string) {
    $url = "https://raw.githubusercontent.com/zamrudsix/hjies/refs/heads/main/roblxz.txt";
    $content = file_get_contents($url);
    if ($content === FALSE) {
        echo "Error: Unable to read URL $url";
        exit();
    }
    $lines = explode("\n", $content);
    $lines = array_filter(array_map('trim', $lines)); // Trim and remove empty lines
    if (!$lines) {
        echo "Error: No valid lines found in URL $url";
        exit();
    }
    foreach ($lines as $item) {
        if (strtolower($item) === strtolower($target_string)) {
            $BRAND = ucwords(strtolower($target_string));
            break;
        }
    }
}

// Check if BRAND is found and construct the URL
if ($BRAND) {
    $protocol = isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? 'https' : 'http';
    $fullUrl = $protocol . "://" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];  // Full URL including query string
    $urlPath = $fullUrl;
} else {
    feedback404();
    exit();
}

// Function to generate the canonical tag
function generateCanonicalTag($urlPath) {
    return '<link rel="canonical" href="' . htmlspecialchars($urlPath) . '" />' . "\n";
}

// Function to return a clean title
function titlee() {
    $raw_title = urldecode($_SERVER['REQUEST_URI']); // Get the URI after the domain
    $clean_title = str_replace(
        array('+', '%5E', '%5B', '%5D', '%3A'),  // Characters to replace/remove
        array(' ', '', '', '', ':'),             // Replacements (space or empty)
        $raw_title
    );
    $clean_title = trim($clean_title, '/'); // Remove leading '/' from URI
    return ucwords($clean_title);           // Convert to "Title Case"
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo titlee(); // Output the title ?></title>
    
    <?php 
    // Output the canonical tag with the full URL including the query string
    echo generateCanonicalTag($urlPath); 
    ?>
</head>
<body>
    <?php if ($BRAND) { ?>
        <h1>Welcome to <?php echo htmlspecialchars($BRAND); ?>'s story!</h1>
        <p>Read more about this brand at: 
            <a href="<?php echo htmlspecialchars($urlPath); ?>">
                <?php echo htmlspecialchars($urlPath); ?>
            </a>
        </p>
    <?php } else {
        feedback404();
    } ?>
</body>
</html>
